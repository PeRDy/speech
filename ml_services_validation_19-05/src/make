#!/usr/bin/env python3
"""Run script.
"""
import logging
import os
import shlex
import sys
from typing import List

logger = logging.getLogger("cli")

try:
    from clinner.command import Type, command
    from clinner.run import Main
except Exception:
    logger.error("Package clinner is not installed, run 'pip install clinner' to install it")
    sys.exit(1)


@command(command_type=Type.SHELL, parser_opts={"help": "Build docker images"})
def build(*args, **kwargs):
    return [
        shlex.split("docker build -t sentiment-analysis-api api"),
        shlex.split("docker build -t sentiment-analysis-test tests")
    ]


@command(command_type=Type.SHELL, parser_opts={"help": "Run service"})
def run(*args, **kwargs) -> List[List[str]]:
    return [shlex.split(f"docker run --network=host sentiment-analysis-api api.py") + list(args)]


@command(command_type=Type.SHELL, parser_opts={"help": "Run tests"})
def test(*args, **kwargs) -> List[List[str]]:
    path = os.path.join(os.path.realpath(os.path.dirname(__file__)), "tests")
    return [shlex.split(
        f"docker run --network=host -v {path}:/srv/apps/sentiment-analysis sentiment-analysis-test run specs")]


class Make(Main):
    ...


if __name__ == "__main__":
    sys.exit(Make().run())
